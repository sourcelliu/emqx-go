// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: pkg/proto/cluster/cluster.proto

package clusterpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 节点基本信息
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`        // 节点唯一标识
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                    // 节点网络地址 (ip:port)
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                    // EMQX版本
	Uptime        int64                  `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`                     // 运行时间(秒)
	Status        int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                     // 节点状态(1=运行中, 2=离线, 3=正在启动)
	LastSeen      int64                  `protobuf:"varint,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // 最后活跃时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeInfo) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *NodeInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NodeInfo) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

// 集群节点加入请求
type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *NodeInfo              `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`            // 加入的节点信息
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`          // 集群认证令牌
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 请求时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *JoinRequest) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *JoinRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JoinRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 集群节点加入响应
type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ClusterNodes  []*NodeInfo            `protobuf:"bytes,3,rep,name=cluster_nodes,json=clusterNodes,proto3" json:"cluster_nodes,omitempty"` // 当前集群节点列表
	ClusterId     string                 `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`          // 集群唯一标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JoinResponse) GetClusterNodes() []*NodeInfo {
	if x != nil {
		return x.ClusterNodes
	}
	return nil
}

func (x *JoinResponse) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// 集群节点离开请求
type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // 要离开的节点ID
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`                // 是否强制离开
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LeaveRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// 集群节点离开响应
type LeaveResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RemainingNodes []*NodeInfo            `protobuf:"bytes,3,rep,name=remaining_nodes,json=remainingNodes,proto3" json:"remaining_nodes,omitempty"` // 剩余节点列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LeaveResponse) GetRemainingNodes() []*NodeInfo {
	if x != nil {
		return x.RemainingNodes
	}
	return nil
}

// 节点状态同步请求
type SyncNodeStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *NodeInfo              `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	KnownNodes    []*NodeInfo            `protobuf:"bytes,2,rep,name=known_nodes,json=knownNodes,proto3" json:"known_nodes,omitempty"` // 已知节点状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncNodeStatusRequest) Reset() {
	*x = SyncNodeStatusRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncNodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncNodeStatusRequest) ProtoMessage() {}

func (x *SyncNodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncNodeStatusRequest.ProtoReflect.Descriptor instead.
func (*SyncNodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *SyncNodeStatusRequest) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *SyncNodeStatusRequest) GetKnownNodes() []*NodeInfo {
	if x != nil {
		return x.KnownNodes
	}
	return nil
}

// 节点状态同步响应
type SyncNodeStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AllNodes      []*NodeInfo            `protobuf:"bytes,3,rep,name=all_nodes,json=allNodes,proto3" json:"all_nodes,omitempty"` // 全量节点状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncNodeStatusResponse) Reset() {
	*x = SyncNodeStatusResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncNodeStatusResponse) ProtoMessage() {}

func (x *SyncNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*SyncNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *SyncNodeStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncNodeStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncNodeStatusResponse) GetAllNodes() []*NodeInfo {
	if x != nil {
		return x.AllNodes
	}
	return nil
}

// 订阅关系信息
type Subscription struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClientId          string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                               // 客户端ID
	TopicFilter       string                 `protobuf:"bytes,2,opt,name=topic_filter,json=topicFilter,proto3" json:"topic_filter,omitempty"`                      // 主题过滤器
	Qos               int32                  `protobuf:"varint,3,opt,name=qos,proto3" json:"qos,omitempty"`                                                        // QoS等级
	NoLocal           bool                   `protobuf:"varint,4,opt,name=no_local,json=noLocal,proto3" json:"no_local,omitempty"`                                 // 是否不接收自己发布的消息
	RetainAsPublished bool                   `protobuf:"varint,5,opt,name=retain_as_published,json=retainAsPublished,proto3" json:"retain_as_published,omitempty"` // 保留消息发布模式
	RetainHandling    int32                  `protobuf:"varint,6,opt,name=retain_handling,json=retainHandling,proto3" json:"retain_handling,omitempty"`            // 保留消息处理策略
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *Subscription) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Subscription) GetTopicFilter() string {
	if x != nil {
		return x.TopicFilter
	}
	return ""
}

func (x *Subscription) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *Subscription) GetNoLocal() bool {
	if x != nil {
		return x.NoLocal
	}
	return false
}

func (x *Subscription) GetRetainAsPublished() bool {
	if x != nil {
		return x.RetainAsPublished
	}
	return false
}

func (x *Subscription) GetRetainHandling() int32 {
	if x != nil {
		return x.RetainHandling
	}
	return 0
}

// 订阅关系同步请求
type SyncSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Subscriptions []*Subscription        `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`        // 订阅列表
	FullSync      bool                   `protobuf:"varint,3,opt,name=full_sync,json=fullSync,proto3" json:"full_sync,omitempty"` // 是否全量同步
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncSubscriptionsRequest) Reset() {
	*x = SyncSubscriptionsRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSubscriptionsRequest) ProtoMessage() {}

func (x *SyncSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*SyncSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *SyncSubscriptionsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncSubscriptionsRequest) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *SyncSubscriptionsRequest) GetFullSync() bool {
	if x != nil {
		return x.FullSync
	}
	return false
}

// 订阅关系同步响应
type SyncSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ReceivedCount int32                  `protobuf:"varint,3,opt,name=received_count,json=receivedCount,proto3" json:"received_count,omitempty"` // 接收的订阅数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncSubscriptionsResponse) Reset() {
	*x = SyncSubscriptionsResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSubscriptionsResponse) ProtoMessage() {}

func (x *SyncSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*SyncSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *SyncSubscriptionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncSubscriptionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncSubscriptionsResponse) GetReceivedCount() int32 {
	if x != nil {
		return x.ReceivedCount
	}
	return 0
}

// 消息发布转发
type PublishForward struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MessageId      string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                                                                                           // 消息唯一标识
	Topic          string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`                                                                                                                    // 主题
	Payload        []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                                                                                                                // 消息体
	Qos            int32                  `protobuf:"varint,4,opt,name=qos,proto3" json:"qos,omitempty"`                                                                                                                       // QoS等级
	Retain         bool                   `protobuf:"varint,5,opt,name=retain,proto3" json:"retain,omitempty"`                                                                                                                 // 是否保留消息
	Dup            bool                   `protobuf:"varint,6,opt,name=dup,proto3" json:"dup,omitempty"`                                                                                                                       // 是否重发消息
	FromNode       string                 `protobuf:"bytes,7,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`                                                                                              // 来源节点ID
	FromClient     string                 `protobuf:"bytes,8,opt,name=from_client,json=fromClient,proto3" json:"from_client,omitempty"`                                                                                        // 来源客户端ID
	Timestamp      int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                                                           // 消息时间戳
	UserProperties map[string][]byte      `protobuf:"bytes,10,rep,name=user_properties,json=userProperties,proto3" json:"user_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 用户属性
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PublishForward) Reset() {
	*x = PublishForward{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishForward) ProtoMessage() {}

func (x *PublishForward) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishForward.ProtoReflect.Descriptor instead.
func (*PublishForward) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *PublishForward) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PublishForward) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PublishForward) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PublishForward) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *PublishForward) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *PublishForward) GetDup() bool {
	if x != nil {
		return x.Dup
	}
	return false
}

func (x *PublishForward) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *PublishForward) GetFromClient() string {
	if x != nil {
		return x.FromClient
	}
	return ""
}

func (x *PublishForward) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PublishForward) GetUserProperties() map[string][]byte {
	if x != nil {
		return x.UserProperties
	}
	return nil
}

// 消息转发确认
type ForwardAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ToNode        string                 `protobuf:"bytes,4,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardAck) Reset() {
	*x = ForwardAck{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardAck) ProtoMessage() {}

func (x *ForwardAck) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardAck.ProtoReflect.Descriptor instead.
func (*ForwardAck) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *ForwardAck) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ForwardAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ForwardAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ForwardAck) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

// 主题路由信息
type Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`                              // 主题
	NodeIds       []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`           // 负责该主题的节点ID列表
	UpdateTime    int64                  `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 最后更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *Route) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Route) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *Route) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 路由更新批量请求
type BatchUpdateRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*Route               `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`                     // 路由列表
	OpType        string                 `protobuf:"bytes,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`       // 操作类型("add", "delete", "update")
	FromNode      string                 `protobuf:"bytes,3,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"` // 发起节点ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateRoutesRequest) Reset() {
	*x = BatchUpdateRoutesRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateRoutesRequest) ProtoMessage() {}

func (x *BatchUpdateRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateRoutesRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateRoutesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *BatchUpdateRoutesRequest) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *BatchUpdateRoutesRequest) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *BatchUpdateRoutesRequest) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

// 路由更新响应
type BatchUpdateRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedCount  int32                  `protobuf:"varint,3,opt,name=updated_count,json=updatedCount,proto3" json:"updated_count,omitempty"` // 更新的路由数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateRoutesResponse) Reset() {
	*x = BatchUpdateRoutesResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateRoutesResponse) ProtoMessage() {}

func (x *BatchUpdateRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateRoutesResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateRoutesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *BatchUpdateRoutesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchUpdateRoutesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchUpdateRoutesResponse) GetUpdatedCount() int32 {
	if x != nil {
		return x.UpdatedCount
	}
	return 0
}

// 集群配置同步请求
type SyncConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ConfigKey     string                 `protobuf:"bytes,2,opt,name=config_key,json=configKey,proto3" json:"config_key,omitempty"`                                                      // 配置键(为空表示全量)
	Configs       map[string]string      `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 配置键值对
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncConfigRequest) Reset() {
	*x = SyncConfigRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfigRequest) ProtoMessage() {}

func (x *SyncConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfigRequest.ProtoReflect.Descriptor instead.
func (*SyncConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *SyncConfigRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncConfigRequest) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SyncConfigRequest) GetConfigs() map[string]string {
	if x != nil {
		return x.Configs
	}
	return nil
}

// 集群配置同步响应
type SyncConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Configs       map[string]string      `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 完整配置(仅当请求为空时返回)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncConfigResponse) Reset() {
	*x = SyncConfigResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfigResponse) ProtoMessage() {}

func (x *SyncConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfigResponse.ProtoReflect.Descriptor instead.
func (*SyncConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *SyncConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncConfigResponse) GetConfigs() map[string]string {
	if x != nil {
		return x.Configs
	}
	return nil
}

// 集群统计信息请求
type ClusterStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // 特定节点(为空表示所有节点)
	Metrics       []string               `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`             // 要获取的指标(为空表示所有)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatsRequest) Reset() {
	*x = ClusterStatsRequest{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatsRequest) ProtoMessage() {}

func (x *ClusterStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatsRequest.ProtoReflect.Descriptor instead.
func (*ClusterStatsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *ClusterStatsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ClusterStatsRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// 节点统计信息
type NodeStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Metrics       map[string]int64       `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 指标键值对
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStats) Reset() {
	*x = NodeStats{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStats) ProtoMessage() {}

func (x *NodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStats.ProtoReflect.Descriptor instead.
func (*NodeStats) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *NodeStats) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeStats) GetMetrics() map[string]int64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *NodeStats) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 集群统计信息响应
type ClusterStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NodeStats     []*NodeStats           `protobuf:"bytes,3,rep,name=node_stats,json=nodeStats,proto3" json:"node_stats,omitempty"` // 节点统计信息列表
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatsResponse) Reset() {
	*x = ClusterStatsResponse{}
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatsResponse) ProtoMessage() {}

func (x *ClusterStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_cluster_cluster_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatsResponse.ProtoReflect.Descriptor instead.
func (*ClusterStatsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_cluster_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *ClusterStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClusterStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClusterStatsResponse) GetNodeStats() []*NodeStats {
	if x != nil {
		return x.NodeStats
	}
	return nil
}

func (x *ClusterStatsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_pkg_proto_cluster_cluster_proto protoreflect.FileDescriptor

const file_pkg_proto_cluster_cluster_proto_rawDesc = "" +
	"\n" +
	"\x1fpkg/proto/cluster/cluster.proto\x12\x05proto\"\xa4\x01\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\x03R\x06uptime\x12\x16\n" +
	"\x06status\x18\x05 \x01(\x05R\x06status\x12\x1b\n" +
	"\tlast_seen\x18\x06 \x01(\x03R\blastSeen\"f\n" +
	"\vJoinRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.proto.NodeInfoR\x04node\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\x97\x01\n" +
	"\fJoinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\rcluster_nodes\x18\x03 \x03(\v2\x0f.proto.NodeInfoR\fclusterNodes\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\"=\n" +
	"\fLeaveRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"}\n" +
	"\rLeaveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\x0fremaining_nodes\x18\x03 \x03(\v2\x0f.proto.NodeInfoR\x0eremainingNodes\"n\n" +
	"\x15SyncNodeStatusRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.proto.NodeInfoR\x04node\x120\n" +
	"\vknown_nodes\x18\x02 \x03(\v2\x0f.proto.NodeInfoR\n" +
	"knownNodes\"z\n" +
	"\x16SyncNodeStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\tall_nodes\x18\x03 \x03(\v2\x0f.proto.NodeInfoR\ballNodes\"\xd4\x01\n" +
	"\fSubscription\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12!\n" +
	"\ftopic_filter\x18\x02 \x01(\tR\vtopicFilter\x12\x10\n" +
	"\x03qos\x18\x03 \x01(\x05R\x03qos\x12\x19\n" +
	"\bno_local\x18\x04 \x01(\bR\anoLocal\x12.\n" +
	"\x13retain_as_published\x18\x05 \x01(\bR\x11retainAsPublished\x12'\n" +
	"\x0fretain_handling\x18\x06 \x01(\x05R\x0eretainHandling\"\x8b\x01\n" +
	"\x18SyncSubscriptionsRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x129\n" +
	"\rsubscriptions\x18\x02 \x03(\v2\x13.proto.SubscriptionR\rsubscriptions\x12\x1b\n" +
	"\tfull_sync\x18\x03 \x01(\bR\bfullSync\"v\n" +
	"\x19SyncSubscriptionsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0ereceived_count\x18\x03 \x01(\x05R\rreceivedCount\"\x8e\x03\n" +
	"\x0ePublishForward\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12\x10\n" +
	"\x03qos\x18\x04 \x01(\x05R\x03qos\x12\x16\n" +
	"\x06retain\x18\x05 \x01(\bR\x06retain\x12\x10\n" +
	"\x03dup\x18\x06 \x01(\bR\x03dup\x12\x1b\n" +
	"\tfrom_node\x18\a \x01(\tR\bfromNode\x12\x1f\n" +
	"\vfrom_client\x18\b \x01(\tR\n" +
	"fromClient\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\x03R\ttimestamp\x12R\n" +
	"\x0fuser_properties\x18\n" +
	" \x03(\v2).proto.PublishForward.UserPropertiesEntryR\x0euserProperties\x1aA\n" +
	"\x13UserPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"x\n" +
	"\n" +
	"ForwardAck\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x17\n" +
	"\ato_node\x18\x04 \x01(\tR\x06toNode\"Y\n" +
	"\x05Route\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x19\n" +
	"\bnode_ids\x18\x02 \x03(\tR\anodeIds\x12\x1f\n" +
	"\vupdate_time\x18\x03 \x01(\x03R\n" +
	"updateTime\"v\n" +
	"\x18BatchUpdateRoutesRequest\x12$\n" +
	"\x06routes\x18\x01 \x03(\v2\f.proto.RouteR\x06routes\x12\x17\n" +
	"\aop_type\x18\x02 \x01(\tR\x06opType\x12\x1b\n" +
	"\tfrom_node\x18\x03 \x01(\tR\bfromNode\"t\n" +
	"\x19BatchUpdateRoutesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rupdated_count\x18\x03 \x01(\x05R\fupdatedCount\"\xc8\x01\n" +
	"\x11SyncConfigRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"config_key\x18\x02 \x01(\tR\tconfigKey\x12?\n" +
	"\aconfigs\x18\x03 \x03(\v2%.proto.SyncConfigRequest.ConfigsEntryR\aconfigs\x1a:\n" +
	"\fConfigsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\x12SyncConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\aconfigs\x18\x03 \x03(\v2&.proto.SyncConfigResponse.ConfigsEntryR\aconfigs\x1a:\n" +
	"\fConfigsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"H\n" +
	"\x13ClusterStatsRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\ametrics\x18\x02 \x03(\tR\ametrics\"\xb7\x01\n" +
	"\tNodeStats\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x127\n" +
	"\ametrics\x18\x02 \x03(\v2\x1d.proto.NodeStats.MetricsEntryR\ametrics\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x99\x01\n" +
	"\x14ClusterStatsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\n" +
	"node_stats\x18\x03 \x03(\v2\x10.proto.NodeStatsR\tnodeStats\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp2\xbf\x04\n" +
	"\x0eClusterService\x12/\n" +
	"\x04Join\x12\x12.proto.JoinRequest\x1a\x13.proto.JoinResponse\x122\n" +
	"\x05Leave\x12\x13.proto.LeaveRequest\x1a\x14.proto.LeaveResponse\x12M\n" +
	"\x0eSyncNodeStatus\x12\x1c.proto.SyncNodeStatusRequest\x1a\x1d.proto.SyncNodeStatusResponse\x12V\n" +
	"\x11SyncSubscriptions\x12\x1f.proto.SyncSubscriptionsRequest\x1a .proto.SyncSubscriptionsResponse\x12:\n" +
	"\x0eForwardPublish\x12\x15.proto.PublishForward\x1a\x11.proto.ForwardAck\x12V\n" +
	"\x11BatchUpdateRoutes\x12\x1f.proto.BatchUpdateRoutesRequest\x1a .proto.BatchUpdateRoutesResponse\x12A\n" +
	"\n" +
	"SyncConfig\x12\x18.proto.SyncConfigRequest\x1a\x19.proto.SyncConfigResponse\x12J\n" +
	"\x0fGetClusterStats\x12\x1a.proto.ClusterStatsRequest\x1a\x1b.proto.ClusterStatsResponseB8Z6github.com/turtacn/emqx-go/pkg/proto/cluster;clusterpbb\x06proto3"

var (
	file_pkg_proto_cluster_cluster_proto_rawDescOnce sync.Once
	file_pkg_proto_cluster_cluster_proto_rawDescData []byte
)

func file_pkg_proto_cluster_cluster_proto_rawDescGZIP() []byte {
	file_pkg_proto_cluster_cluster_proto_rawDescOnce.Do(func() {
		file_pkg_proto_cluster_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_cluster_cluster_proto_rawDesc), len(file_pkg_proto_cluster_cluster_proto_rawDesc)))
	})
	return file_pkg_proto_cluster_cluster_proto_rawDescData
}

var file_pkg_proto_cluster_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_pkg_proto_cluster_cluster_proto_goTypes = []any{
	(*NodeInfo)(nil),                  // 0: proto.NodeInfo
	(*JoinRequest)(nil),               // 1: proto.JoinRequest
	(*JoinResponse)(nil),              // 2: proto.JoinResponse
	(*LeaveRequest)(nil),              // 3: proto.LeaveRequest
	(*LeaveResponse)(nil),             // 4: proto.LeaveResponse
	(*SyncNodeStatusRequest)(nil),     // 5: proto.SyncNodeStatusRequest
	(*SyncNodeStatusResponse)(nil),    // 6: proto.SyncNodeStatusResponse
	(*Subscription)(nil),              // 7: proto.Subscription
	(*SyncSubscriptionsRequest)(nil),  // 8: proto.SyncSubscriptionsRequest
	(*SyncSubscriptionsResponse)(nil), // 9: proto.SyncSubscriptionsResponse
	(*PublishForward)(nil),            // 10: proto.PublishForward
	(*ForwardAck)(nil),                // 11: proto.ForwardAck
	(*Route)(nil),                     // 12: proto.Route
	(*BatchUpdateRoutesRequest)(nil),  // 13: proto.BatchUpdateRoutesRequest
	(*BatchUpdateRoutesResponse)(nil), // 14: proto.BatchUpdateRoutesResponse
	(*SyncConfigRequest)(nil),         // 15: proto.SyncConfigRequest
	(*SyncConfigResponse)(nil),        // 16: proto.SyncConfigResponse
	(*ClusterStatsRequest)(nil),       // 17: proto.ClusterStatsRequest
	(*NodeStats)(nil),                 // 18: proto.NodeStats
	(*ClusterStatsResponse)(nil),      // 19: proto.ClusterStatsResponse
	nil,                               // 20: proto.PublishForward.UserPropertiesEntry
	nil,                               // 21: proto.SyncConfigRequest.ConfigsEntry
	nil,                               // 22: proto.SyncConfigResponse.ConfigsEntry
	nil,                               // 23: proto.NodeStats.MetricsEntry
}
var file_pkg_proto_cluster_cluster_proto_depIdxs = []int32{
	0,  // 0: proto.JoinRequest.node:type_name -> proto.NodeInfo
	0,  // 1: proto.JoinResponse.cluster_nodes:type_name -> proto.NodeInfo
	0,  // 2: proto.LeaveResponse.remaining_nodes:type_name -> proto.NodeInfo
	0,  // 3: proto.SyncNodeStatusRequest.node:type_name -> proto.NodeInfo
	0,  // 4: proto.SyncNodeStatusRequest.known_nodes:type_name -> proto.NodeInfo
	0,  // 5: proto.SyncNodeStatusResponse.all_nodes:type_name -> proto.NodeInfo
	7,  // 6: proto.SyncSubscriptionsRequest.subscriptions:type_name -> proto.Subscription
	20, // 7: proto.PublishForward.user_properties:type_name -> proto.PublishForward.UserPropertiesEntry
	12, // 8: proto.BatchUpdateRoutesRequest.routes:type_name -> proto.Route
	21, // 9: proto.SyncConfigRequest.configs:type_name -> proto.SyncConfigRequest.ConfigsEntry
	22, // 10: proto.SyncConfigResponse.configs:type_name -> proto.SyncConfigResponse.ConfigsEntry
	23, // 11: proto.NodeStats.metrics:type_name -> proto.NodeStats.MetricsEntry
	18, // 12: proto.ClusterStatsResponse.node_stats:type_name -> proto.NodeStats
	1,  // 13: proto.ClusterService.Join:input_type -> proto.JoinRequest
	3,  // 14: proto.ClusterService.Leave:input_type -> proto.LeaveRequest
	5,  // 15: proto.ClusterService.SyncNodeStatus:input_type -> proto.SyncNodeStatusRequest
	8,  // 16: proto.ClusterService.SyncSubscriptions:input_type -> proto.SyncSubscriptionsRequest
	10, // 17: proto.ClusterService.ForwardPublish:input_type -> proto.PublishForward
	13, // 18: proto.ClusterService.BatchUpdateRoutes:input_type -> proto.BatchUpdateRoutesRequest
	15, // 19: proto.ClusterService.SyncConfig:input_type -> proto.SyncConfigRequest
	17, // 20: proto.ClusterService.GetClusterStats:input_type -> proto.ClusterStatsRequest
	2,  // 21: proto.ClusterService.Join:output_type -> proto.JoinResponse
	4,  // 22: proto.ClusterService.Leave:output_type -> proto.LeaveResponse
	6,  // 23: proto.ClusterService.SyncNodeStatus:output_type -> proto.SyncNodeStatusResponse
	9,  // 24: proto.ClusterService.SyncSubscriptions:output_type -> proto.SyncSubscriptionsResponse
	11, // 25: proto.ClusterService.ForwardPublish:output_type -> proto.ForwardAck
	14, // 26: proto.ClusterService.BatchUpdateRoutes:output_type -> proto.BatchUpdateRoutesResponse
	16, // 27: proto.ClusterService.SyncConfig:output_type -> proto.SyncConfigResponse
	19, // 28: proto.ClusterService.GetClusterStats:output_type -> proto.ClusterStatsResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pkg_proto_cluster_cluster_proto_init() }
func file_pkg_proto_cluster_cluster_proto_init() {
	if File_pkg_proto_cluster_cluster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_cluster_cluster_proto_rawDesc), len(file_pkg_proto_cluster_cluster_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_cluster_cluster_proto_goTypes,
		DependencyIndexes: file_pkg_proto_cluster_cluster_proto_depIdxs,
		MessageInfos:      file_pkg_proto_cluster_cluster_proto_msgTypes,
	}.Build()
	File_pkg_proto_cluster_cluster_proto = out.File
	file_pkg_proto_cluster_cluster_proto_goTypes = nil
	file_pkg_proto_cluster_cluster_proto_depIdxs = nil
}
